var global_deviation = 0; var _GlobalTime = function (b, a) { this.id = b; this.cache = {}; this.deviation = 0; this.opt = a; this.Option = { citys: [{ city: "\u5317\u4eac\u65f6\u95f4", utc: +8, id: 41 }, { city: "\u4f26\u6566\u65f6\u95f4", utc: +0, id: 2 }, { city: "\u7ebd\u7ea6\u65f6\u95f4", utc: -4, id: 78 }, { city: "\u6089\u5c3c\u65f6\u95f4", utc: +11, id: 53 }], display: "MM\u6708dd\u65e5 HH:mm:ss", styles: ".globaltime_city{padding:0 25px 0 30px;}.globaltime_time{padding:0 5px}", load: "now", url: "//cmsjs.eastmoney.com/TimeZone/Default.aspx?type=utctime&ids={ids}&jn={jsName}" }; this.init() }; _GlobalTime.prototype.utils = { $: function (a) { return typeof (a) == "string" ? document.getElementById(a) : a }, extend: function (a, c) { for (var b in c) { a[b] = c[b] } return a }, attchEvent: function (e, b, c, a) { if (e.addEventListener) { e.addEventListener(b, c, a); return true } else { if (e.attachEvent) { var d = e.attachEvent("on" + b, c); return d } else { e["on" + b] = c } } }, detachEvent: function (e, b, c, a) { if (e.removeEventListener) { e.removeEventListener(b, c, a); return true } else { if (e.detachEvent) { var d = e.detachEvent("on" + b, c); return d } else { e["on" + b] = null; return } } }, dateFromat: function (c, a) { if (typeof c == "undefined") { c = new Date() } var g; var f = ""; a = (a == null) ? "yyyy-MM-dd HH:mm:ss" : a; var j = c.getFullYear(); var h = c.getMonth() + 1; var i = c.getDate(); var o = c.getHours(); var b = c.getMinutes(); var q = c.getSeconds(); var n = (h > 9) ? h : "0" + h; var l = (i > 9) ? i : "0" + i; var k = (o > 9) ? o : "0" + o; var e = (b > 9) ? b : "0" + b; var p = (q > 9) ? q : "0" + q; f = a.replace("yyyy", j).replace("MM", n).replace("dd", l).replace("HH", k).replace("mm", e).replace("ss", p).replace("M", h).replace("d", i).replace("H", o).replace("m", b).replace("s", q); return f }, jsLoad: function (d, c, b) { var a = document.createElement("script"); a.setAttribute("charset", c); a.setAttribute("type", "text/javascript"); a.setAttribute("src", d); document.getElementsByTagName("head")[0].appendChild(a); a.onload = a.onreadystatechange = function () { if (!this.readyState || this.readyState == "loaded" || this.readyState == "complete") { b(); b = null; a.parentNode.removeChild(a) } } }, now: function () { return new Date().getTime() }, formatTime: function (a, b) { return new Date(a + (3600000 * b)) } }; _GlobalTime.prototype.init = function () { var a = this; a.setOption(); if (a.Option.load == "onload") { a.utils.attchEvent(window, "load", function () { a.getServiceTime() }) } else { a.getServiceTime() } }; _GlobalTime.prototype.setOption = function () { var a = this; a.utils.extend(a.Option, a.opt || {}) }; _GlobalTime.prototype.builderCss = function () { var a = this.Option.styles; var c = document.createElement("style"); document.getElementsByTagName("HEAD").item(0).appendChild(c); c.type = "text/css"; if (c.styleSheet) { c.styleSheet.cssText = a } else { var b = document.createTextNode(a); c.appendChild(b) } }; _GlobalTime.prototype.getUtcIndent = function () { var a = this, d = a.Option.url, g = a.Option.citys.length, f = ""; for (var e = 0, c = g; e < c; e++) { f += f == "" ? a.Option.citys[e].id : "," + a.Option.citys[e].id } d = d.replace("{ids}", f); d = d.replace("{jsName}", "emutc"); d = d + "&rt=" + new Date().getTime(); var b = function () { _emutc = a.cache.emutc; if (_emutc.length != g) { alert("\u6709\u8bef"); return } for (var l = 0, k = g; l < k; l++) { var m = _emutc[l].split(":"), h = m[0] * 1; gmt_min = m[1] * 1; m = parseInt(h) + parseFloat(parseInt((gmt_min / 60) * 100) / 100); a.Option.citys[l].utc = m } }; if (!(typeof (emutc) == "undefined" || emutc == null || emutc == "")) { a.cache.emutc = emutc; b() } else { a.utils.jsLoad(d, "utf-8", function () { if (!(typeof (emutc) == "undefined" || emutc == null || emutc == "")) { a.cache.emutc = emutc; b() } }) } }; _GlobalTime.prototype.show = function () { var a = this; var f = a.Option; var b = f.citys.length; var l = [], k = []; for (var e = 0; e < b; e++) { k[e] = "globaltime_" + a.id + "_" + (a.utils.now() + e); l[e] = '<span class="globaltime_city">' + f.citys[e].city + '<span id="' + k[e] + '" class="globaltime_time"></span></span>' } a.utils.$(a.id).innerHTML = l.join(""); var h = function () { var d = a.utils.now() + a.deviation - (3600000 * 8); for (var c = 0; c < b; c++) { var j = a.utils.formatTime(d, f.citys[c].utc); a.utils.$(k[c]).innerHTML = a.utils.dateFromat(j, f.display) } }; h(); var g = setInterval(h, 1000) }; _GlobalTime.prototype.getServiceTime = function () { var a = this, d = a.Option.url, h = a.Option.citys.length, f = ""; for (var e = 0, c = h; e < c; e++) { f += f == "" ? a.Option.citys[e].id : "," + a.Option.citys[e].id } d = d.replace("{ids}", f); d = d.replace("{jsName}", "emutc"); d = d + "&rt=" + new Date().getTime(); var b = function () { _emutc = a.cache.emutc; if (_emutc.length != h) { return } for (var m = 0, l = h; m < l; m++) { var n = _emutc[m].split(":"), k = n[0] * 1; gmt_min = n[1] * 1; n = parseInt(k) + parseFloat(parseInt((gmt_min / 60) * 100) / 100); a.Option.citys[m].utc = n } a.builderCss(); a.show() }; var g = new Date().getTime(); a.utils.jsLoad(d, "utf-8", function () { if (!(typeof (emutc) == "undefined" || emutc == null || emutc == "")) { a.cache.emutc = emutc.GMT; var i = new Date().getTime(); a.deviation = emutc.UTCTIME + (i - g) * 0.5 - i; global_deviation = a.deviation; b() } }) };